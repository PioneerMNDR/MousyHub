@using MousyHub.Models
@using MousyHub.Models.Services
@using MousyHub.Models.User
@inject ProviderService Service
@inject SettingsService Settings


<MudGrid >
    <MudItem md="10" xs="7">
        <MudSelect AnchorOrigin="Origin.BottomCenter" Label="Select API" Variant="Variant.Outlined" Value="Service.SelectType" ValueChanged="@((KeyValuePair<ProviderService.APIType, string> newValue)=>ValueSelectConnectionChange(newValue))" OpenIcon="@Icons.Material.Filled.Api">
            @foreach (var item in Service.ConnectionsTypes)
            {
                <MudSelectItem Value="@item">@item.Value</MudSelectItem>
            }
        </MudSelect>
    </MudItem>
    <MudItem md="2" xs="5" Class="d-flex justify-center align-content-center align-center">
        @if (isLoading)
        {
            <MudProgressCircular Color="Color.Success" Indeterminate></MudProgressCircular>
        }
        else
        {
            <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="ConnectionChanged" FullWidth>Connect</MudButton>
        }
    </MudItem>

</MudGrid>


<MudDivider Class="mt-3 mb-3"></MudDivider>
<MudPaper Elevation="2">
    <MudContainer Class="pa-4">
        <MudGrid Spacing="2">
            @switch (Service.SelectType.Key)
            {
                case ProviderService.APIType.KoboldCPP:
                    <MudItem Class="d-flex align-content-center">
                        <MudTextField @bind-Value="@Service.BaseUrl" Label="URL"></MudTextField>
                    </MudItem>
                    <MudItem Class="d-flex align-content-center align-end">
                        <MudText>@ModelName</MudText>
                        </MudItem>
                    break;
                case ProviderService.APIType.Self_Inference:
                    <MudItem Class="d-flex align-content-center">
                        <MudGrid Spacing="4">
                            <MudItem  xs="12" md="12">
                                <MudStack Row AlignItems="AlignItems.End" Class="mb-3">
                                     @if (Settings.LocalModelsList.Count>0)
                                    {
                                        <MudText>Model:</MudText>
                                        <MudSelect AnchorOrigin="Origin.BottomCenter" @bind-Value=Settings.User.SelfInferenceConfig.ModelPath ToStringFunc="converter">
                                            @foreach (var item in Settings.LocalModelsList)
                                            {
                                                <MudSelectItem Value="item">@Path.GetFileName(item)</MudSelectItem>
                                            }
                                        </MudSelect>
                                    }
                                    else
                                    {
                                        <MudAlert Severity="Severity.Warning">No models found</MudAlert>
                                    <MudAlert Severity="Severity.Info">Download GGUF model on
                                            <MudElement HtmlTag="a"
                                                        Class="ms-1"
                                                        Style="color:yellow;font-weight:bold;"
                                                        href="https://huggingface.co/models?pipeline_tag=text-generation&sort=trending"
                                                        target="blank"
                                                        rel="noopener noreferrer">
                                                Hugging Face
                                            </MudElement>
                                            and place them in the LocalModels folder and refresh page
                                    </MudAlert>
                                    }
                              
                                </MudStack>
                            </MudItem>
                            <MudItem xs="12" md="12" Class=" mr-2">
                                <MudGrid Spacing="5" >
                                    <MudItem xs="12" md="6">
                                        <MudText>Context length: <b>@Settings.User.SelfInferenceConfig.ContextSize</b> </MudText>
                                        <MudSlider  Size=Size.Large Variant="Variant.Filled" Color="Color.Tertiary" @bind-Value=Settings.User.SelfInferenceConfig.ContextSize Step="2048" Min="2048" Max="20480" Immediate></MudSlider>
                                     </MudItem>
                                     <MudItem xs="12" md="3">
                                         <MudSwitch  Label="MLOCK(recommended):" Size=Size.Medium Color="Color.Primary" @bind-Value=Settings.User.SelfInferenceConfig.UseMemoryLock></MudSwitch>
                                     </MudItem>
                                     <MudItem xs="12" md="3">
                                         <MudSwitch Size=Size.Medium Label="MMAP(fast load):"   Color="Color.Secondary" @bind-Value=Settings.User.SelfInferenceConfig.UseMemorymap></MudSwitch>
                                     </MudItem>
                                     <MudItem xs="12" md="6">
                                         <MudText>GPU layer count: <b>@Settings.User.SelfInferenceConfig.GpuLayerCount</b> </MudText>
                                        <MudSlider Size=Size.Large Variant="Variant.Filled" Color="Color.Warning" @bind-Value=Settings.User.SelfInferenceConfig.GpuLayerCount Step="1" Min="0" Max="40" Immediate></MudSlider>
                                     </MudItem>
                                     <MudItem xs="4" md="2">
                                     
                                        <MudTextField Variant="Variant.Text" Label="Threads" @bind-Value=Settings.User.SelfInferenceConfig.Threads></MudTextField>
                                    </MudItem>
                                    <MudItem xs="4" md="2">

                                         <MudTextField Variant="Variant.Text" Label="Batch Threads" @bind-Value=Settings.User.SelfInferenceConfig.BatchThreads></MudTextField>
                                    </MudItem>
                                     <MudItem xs="4" md="2">

                                         <MudTextField Variant="Variant.Text" Label="Batch Size" @bind-Value=Settings.User.SelfInferenceConfig.BatchSize></MudTextField>
                                     </MudItem>
                                </MudGrid>
                            </MudItem>
                        </MudGrid>
        
               
                    </MudItem>
                    break;
                case ProviderService.APIType.Chat_Completions:
                    break;
                default:
                    break;
            }
        </MudGrid>
    </MudContainer>
</MudPaper>
<MudPaper  Class="mt-5 pa-4">
    <MudGrid  Spacing="2">
        <MudItem md="6">
            <TextGenParamEditor></TextGenParamEditor>
        </MudItem>
        <MudItem md="6">
            <InstructEditor></InstructEditor>
        </MudItem>
    </MudGrid>
</MudPaper>





@code {
    [CascadingParameter]
    public Main Main { get; set; }
    private string ModelName = "";
    bool isLoading = false;
    Func<string, string> converter = p => Path.GetFileName(p);

    private async Task ConnectionChanged()
    {
        isLoading = true;
        ModelName = await Service.NewConnect(Settings);
        isLoading = false;
    }
    private void ValueSelectConnectionChange(KeyValuePair<ProviderService.APIType, string> newValue)
    {
        Service.SelectType = newValue;
        Service.ChangeConnectionType();

    }




}
